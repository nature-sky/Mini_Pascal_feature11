(program [offset=12]
 (decllist
   (decl->program: |feature|
     number: 1, scope: 1))
 (block [offset=-400]
   (decllist
     (decl->variable: |a|
       (type->size=400, kind=array:
         (type->size=4, kind=subrange:
           (expr->[value=0][rhs] int: 0
             expr_type->(type->size=4, kind=INTEGER))
           (expr->[value=9][rhs] int: 9
             expr_type->(type->size=4, kind=INTEGER)))
         (type->size=40, kind=array:
           (type->size=4, kind=subrange:
             (expr->[value=0][rhs] int: 0
               expr_type->(type->size=4, kind=INTEGER))
             (expr->[value=9][rhs] int: 9
               expr_type->(type->size=4, kind=INTEGER)))
           (type->size=4, kind=INTEGER)))
       [lev=1,off=-400,ind=0,tmp=0]
       number: 1, scope: 2))
   (stmtlist
     (stmt->assignstmt:
       (expr->[lev=1,off=-400,ind=0,tmp=0][lhs/regcnt=1] binexp: op([)
         (expr->[lev=1,off=-400,ind=0,tmp=0][lhs/regcnt=1] binexp: op([)
           (expr->[lev=1,off=-400,ind=0,tmp=0][lhs] binding: |a|, number: 1, scope: 2
             expr_type->(type->size=400, kind=array:
               (type->size=4, kind=subrange:
                 (expr->[value=0][rhs] int: 0
                   expr_type->(type->size=4, kind=INTEGER))
                 (expr->[value=9][rhs] int: 9
                   expr_type->(type->size=4, kind=INTEGER)))
               (type->size=40, kind=array:
                 (type->size=4, kind=subrange:
                   (expr->[value=0][rhs] int: 0
                     expr_type->(type->size=4, kind=INTEGER))
                   (expr->[value=9][rhs] int: 9
                     expr_type->(type->size=4, kind=INTEGER)))
                 (type->size=4, kind=INTEGER))))
           (expr->[value=0][rhs/later] int: 0
             expr_type->(type->size=4, kind=INTEGER))
           expr_type->(type->size=40, kind=array:
             (type->size=4, kind=subrange:
               (expr->[value=0][rhs] int: 0
                 expr_type->(type->size=4, kind=INTEGER))
               (expr->[value=9][rhs] int: 9
                 expr_type->(type->size=4, kind=INTEGER)))
             (type->size=4, kind=INTEGER)))
         (expr->[value=0][rhs/later] int: 0
           expr_type->(type->size=4, kind=INTEGER))
         expr_type->(type->size=4, kind=INTEGER))
       (expr->[value=10][rhs/later] int: 10
         expr_type->(type->size=4, kind=INTEGER)))
     (stmt->callstmt:
       (expr->[rhs] call: |writeln|, number: 1, scope: 0
         (exprlist
           (expr->[lev=1,off=-400,ind=0,tmp=0][rhs/regcnt=1/reg=eax] binexp: op([)
             (expr->[lev=1,off=-400,ind=0,tmp=0][rhs/regcnt=1] binexp: op([)
               (expr->[lev=1,off=-400,ind=0,tmp=0][rhs] binding: |a|, number: 1, scope: 2
                 expr_type->(type->size=400, kind=array:
                   (type->size=4, kind=subrange:
                     (expr->[value=0][rhs] int: 0
                       expr_type->(type->size=4, kind=INTEGER))
                     (expr->[value=9][rhs] int: 9
                       expr_type->(type->size=4, kind=INTEGER)))
                   (type->size=40, kind=array:
                     (type->size=4, kind=subrange:
                       (expr->[value=0][rhs] int: 0
                         expr_type->(type->size=4, kind=INTEGER))
                       (expr->[value=9][rhs] int: 9
                         expr_type->(type->size=4, kind=INTEGER)))
                     (type->size=4, kind=INTEGER))))
               (expr->[value=0][rhs/later] int: 0
                 expr_type->(type->size=4, kind=INTEGER))
               expr_type->(type->size=40, kind=array:
                 (type->size=4, kind=subrange:
                   (expr->[value=0][rhs] int: 0
                     expr_type->(type->size=4, kind=INTEGER))
                   (expr->[value=9][rhs] int: 9
                     expr_type->(type->size=4, kind=INTEGER)))
                 (type->size=4, kind=INTEGER)))
             (expr->[value=0][rhs/later] int: 0
               expr_type->(type->size=4, kind=INTEGER))
             expr_type->(type->size=4, kind=INTEGER))))))))
